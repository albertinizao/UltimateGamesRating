package com.opipo.ultimategamesrating.model;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;

@DisplayName("Continuity autogenerated")
public class ContinuityTest {

    private Continuity continuity;

    @BeforeEach
    public void init() {
        continuity = new Continuity();
    }


    @Test
    @DisplayName("The getter and the setter of saga work well")
    public void sagaAttributeTest() {
        String saga = Integer.toString(1);
        continuity.setSaga(saga);
        assertEquals(saga, continuity.getSaga());
    }


    @Test
    @DisplayName("The getter and the setter of position work well")
    public void positionAttributeTest() {
        Integer position = Integer.valueOf(2);
        continuity.setPosition(position);
        assertEquals(position, continuity.getPosition());
    }


    @Test
    @DisplayName("The getter and the setter of expansion work well")
    public void expansionAttributeTest() {
        List<String> expansion = new ArrayList<String>();
        continuity.setExpansion(expansion);
        assertEquals(expansion, continuity.getExpansion());
    }


    @Test
    @DisplayName("The getter and the setter of DLC work well")
    public void DLCAttributeTest() {
        List<String> DLC = new ArrayList<String>();
        continuity.setDLC(DLC);
        assertEquals(DLC, continuity.getDLC());
    }


    @Test
    public void givenSameObjReturnThatTheyAreEquals() {
        Continuity o1 = new Continuity();
        Continuity o2 = new Continuity();
        assertEquals(o1, o2);
    }

    @Test
    public void givenSameObjReturnZero() {
        Continuity o1 = new Continuity();
        Continuity o2 = new Continuity();
        assertEquals(0, o1.compareTo(o2));
    }

    @Test
    public void givenObjectFromOtherClassReturnThatTheyArentEquals() {
        Continuity o1 = new Continuity();
        assertNotEquals(o1, new String());
    }

    @Test
    public void givenSameObjReturnSameHashCode() {
        Continuity o1 = new Continuity();
        Continuity o2 = new Continuity();
        assertEquals(o1.hashCode(), o2.hashCode());
    }

}